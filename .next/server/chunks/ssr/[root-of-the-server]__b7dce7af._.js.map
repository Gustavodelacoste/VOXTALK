{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Kaue/Desktop/Voxtalk/lib/firebase.js"],"sourcesContent":["// /lib/firebase.js\r\nimport { initializeApp, getApps } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\n// Configuração do seu projeto Firebase\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBUwmYq74VS6F3j_yWItwZuQC3L07ceZpU\",\r\n  authDomain: \"voxtalk69.firebaseapp.com\",\r\n  projectId: \"voxtalk69\",\r\n  storageBucket: \"voxtalk69.firebasestorage.app\",\r\n  messagingSenderId: \"1043297074595\",\r\n  appId: \"1:1043297074595:web:6a56c7c65e0854ad2a6e16\",\r\n  measurementId: \"G-XQQHW2F4HC\"\r\n};\r\n\r\n// Evita reinicialização múltipla no Next.js\r\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApps()[0];\r\n\r\n// Exporta os serviços que vamos usar\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);\r\n"],"names":[],"mappings":"AAAA,mBAAmB;;;;;;;AACnB;AAAA;AACA;AAAA;AACA;AAAA;;;;AAEA,uCAAuC;AACvC,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;IACP,eAAe;AACjB;AAEA,4CAA4C;AAC5C,MAAM,MAAM,CAAC,IAAA,2KAAO,IAAG,MAAM,GAAG,IAAA,iLAAa,EAAC,kBAAkB,IAAA,2KAAO,GAAE,CAAC,EAAE;AAGrE,MAAM,OAAO,IAAA,6KAAO,EAAC;AACrB,MAAM,KAAK,IAAA,iLAAY,EAAC","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Kaue/Desktop/Voxtalk/app/chat/page.jsx"],"sourcesContent":["\"use client\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { db, auth } from \"../../lib/firebase\";\r\nimport { collection, addDoc, getDocs, query, where, orderBy } from \"firebase/firestore\";\r\nimport { signOut } from \"firebase/auth\";\r\n\r\nexport default function ChatPage() {\r\n  const [users, setUsers] = useState([]); // Lista de usuários\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [newUserEmail, setNewUserEmail] = useState(\"\");\r\n  const [newUserName, setNewUserName] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n\r\n  // Mock: lista inicial de usuários (substituir com Firebase se quiser)\r\n  useEffect(() => {\r\n    setUsers([{email:\"alice@test.com\", name:\"Alice\"}, {email:\"bob@test.com\", name:\"Bob\"}]);\r\n    setSelectedUser({email:\"alice@test.com\", name:\"Alice\"});\r\n  }, []);\r\n\r\n  const fetchMessages = async () => {\r\n    if(!selectedUser) return;\r\n    const q = query(\r\n      collection(db, \"messages\"),\r\n      where(\"participants\", \"array-contains\", selectedUser.email),\r\n      orderBy(\"timestamp\",\"asc\")\r\n    );\r\n    const snapshot = await getDocs(q);\r\n    setMessages(snapshot.docs.map(doc=>({id:doc.id, ...doc.data()})));\r\n  };\r\n\r\n  useEffect(()=>{ fetchMessages(); }, [selectedUser]);\r\n\r\n  const sendMessage = async () => {\r\n    if(!newMessage || !selectedUser) return;\r\n    await addDoc(collection(db,\"messages\"),{\r\n      from: auth.currentUser?.email || \"Você\",\r\n      to: selectedUser.email,\r\n      participants:[auth.currentUser?.email || \"Você\", selectedUser.email],\r\n      message: newMessage,\r\n      timestamp: new Date()\r\n    });\r\n    setNewMessage(\"\");\r\n    fetchMessages();\r\n  };\r\n\r\n  const handleAddUser = () => {\r\n    if(!newUserEmail || !newUserName) return;\r\n    const newUser = {email:newUserEmail, name:newUserName};\r\n    setUsers(prev=>[...prev,newUser]);\r\n    setNewUserEmail(\"\"); setNewUserName(\"\");\r\n  };\r\n\r\n  const handleLogout = async () => { await signOut(auth); window.location.href=\"/login\"; }\r\n\r\n  return (\r\n    <div className=\"chat-layout\">\r\n      {/* Sidebar */}\r\n      <div className=\"sidebar\">\r\n        <h2>Conversas</h2>\r\n        <div className=\"user-list\">\r\n          {users.map(u=>(\r\n            <div \r\n              key={u.email} \r\n              className={`user-item ${selectedUser?.email===u.email?\"active\":\"\"}`} \r\n              onClick={()=>setSelectedUser(u)}\r\n            >\r\n              {u.name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Adicionar usuário */}\r\n        <div className=\"add-user\">\r\n          <input placeholder=\"Email\" value={newUserEmail} onChange={e=>setNewUserEmail(e.target.value)} />\r\n          <input placeholder=\"Nametag\" value={newUserName} onChange={e=>setNewUserName(e.target.value)} />\r\n          <button onClick={handleAddUser} className=\"chat-input button\">Adicionar</button>\r\n        </div>\r\n\r\n        <button onClick={handleLogout} className=\"chat-input button mt-2 bg-red-500 text-white\">Sair</button>\r\n      </div>\r\n\r\n      {/* Chat principal */}\r\n      <div className=\"chat-main\">\r\n        <div className=\"chat-header\">\r\n          <h2>{selectedUser?.name || \"Selecione um usuário\"}</h2>\r\n        </div>\r\n        <div className=\"chat-box\">\r\n          {messages.map(m=>(\r\n            <div key={m.id} className={`message ${m.from === (auth.currentUser?.email||\"Você\")?\"sent\":\"received\"}`}>\r\n              <strong>{m.from.split(\"@\")[0]}:</strong> {m.message}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"chat-input\">\r\n          <input placeholder=\"Digite uma mensagem...\" value={newMessage} onChange={e=>setNewMessage(e.target.value)} />\r\n          <button onClick={sendMessage}>Enviar</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}